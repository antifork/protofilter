--- /usr/src/linux/drivers/net/ppp.orig.c	Thu Mar  1 20:44:27 2001
+++ /usr/src/linux/drivers/net/ppp.c	Tue Mar 13 18:58:58 2001
@@ -136,9 +136,36 @@
  * Parameters which may be changed via insmod.
  */
 
+
 static int  flag_time = OPTIMIZE_FLAG_TIME;
+
+/*
+$Id$
+*/
+
+/* FIXME: Jiffies protofilter. Bonelli Nicola <bonelli@antifork.org>
+*/
+
+#ifndef MAX_PROTO_IGNORED
+#define MAX_PROTO_IGNORED   128
+#endif
+
+static int  proto_in [MAX_PROTO_IGNORED] = { 0 };
+
+static int  proto_regin [32];
+
+
 MODULE_PARM(flag_time, "i");
 
+MODULE_PARM(proto_in , "1-255" __MODULE_STRING(MAX_PROTO_IGNORED) "i");
+
+#define SET_PROTO_BIT(buff,i)   buff[i / 8] |= (0x01 << (i % 8)) 
+#define CHECK_PROTO_BIT(buff,i) buff[i / 8] &  (0x01 << (i % 8))
+
+/* EOC 
+*/
+
+
 #define CHECK_PPP_MAGIC(ppp)	do { \
 	if (ppp->magic != PPP_MAGIC) { \
 		printk(ppp_magic_warn, ppp, __FILE__, __LINE__); \
@@ -280,6 +307,7 @@
 {
 	static struct tty_ldisc	ppp_ldisc;
 	int    status;
+        int    i;
 
 	printk(KERN_INFO
 	       "PPP: version %s (demand dialling)"
@@ -290,7 +318,17 @@
 	       "TCP compression code copyright 1989 Regents of the "
 	       "University of California\n");
 #endif
-
+   
+        /* FIXME:  Jiffies proto-filter. 
+         */ 
+         printk(KERN_INFO
+                "PPP: Jiffies proto-filter 0.21 <bonelli@antifork.org>\n");
+
+        for (i=0; i< MAX_PROTO_IGNORED && proto_in[i]; i++)	
+	{
+	  SET_PROTO_BIT(proto_regin , 0xff & proto_in [i]);
+	}
+	
 	/*
 	 * Register the tty discipline
 	 */
@@ -2252,7 +2290,19 @@
 	skb->protocol = htons(proto);
 	skb_pull(skb, PPP_HDRLEN);	/* pull off ppp header */
 	skb->mac.raw   = skb->data;
-	ppp->last_recv = jiffies;
+
+        /* FIXME: 
+		Active-filter is not implemented in linux kernel.
+		We perform jiffies proto_in filtering here.
+		The ppp header was already pulled off; 
+		skb->data points to the layer IP, then. 
+		  
+                (int)skb->data[9]= IP+9 = protocol field.
+         */
+
+        if  ( !(CHECK_PROTO_BIT(proto_regin, (int)skb->data[9])) )        
+		ppp->last_recv = jiffies;
+
 	netif_rx (skb);
 	return 1;
 }
